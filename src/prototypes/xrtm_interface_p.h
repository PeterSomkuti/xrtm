/* xrtm_interface.c */
int xrtm_option_n(void);
int xrtm_option_max_name_length(void);
const char *xrtm_option_index_to_name(int index);
int xrtm_option_name_to_index(const char *name);
enum xrtm_option_mask xrtm_option_index_to_mask(int index);
int xrtm_option_mask_to_index(enum xrtm_option_mask mask);
int xrtm_option_mask_to_index_list(enum xrtm_option_mask mask, int *indexes, int length);
enum xrtm_option_mask xrtm_option_name_to_mask(const char *name);
const char *xrtm_option_mask_to_name(enum xrtm_option_mask mask);
char *xrtm_option_mask_to_name_list(enum xrtm_option_mask mask, char *s, int length);
enum xrtm_option_mask xrtm_option_name_list_to_mask(char *s);
int xrtm_option_mask_to_value_list(enum xrtm_option_mask mask, long *values, int length);
enum xrtm_option_mask xrtm_option_value_list_to_mask(long *values, int n_values);
int xrtm_solver_n(void);
int xrtm_solver_max_name_length(void);
const char *xrtm_solver_index_to_name(int index);
int xrtm_solver_name_to_index(const char *name);
enum xrtm_solver_mask xrtm_solver_index_to_mask(int index);
int xrtm_solver_mask_to_index(enum xrtm_solver_mask mask);
int xrtm_solver_mask_to_index_list(enum xrtm_solver_mask mask, int *indexes, int length);
enum xrtm_solver_mask xrtm_solver_name_to_mask(const char *name);
const char *xrtm_solver_mask_to_name(enum xrtm_solver_mask mask);
char *xrtm_solver_mask_to_name_list(enum xrtm_solver_mask mask, char *s, int length);
enum xrtm_solver_mask xrtm_solver_name_list_to_mask(char *s);
int xrtm_solver_mask_to_value_list(enum xrtm_solver_mask mask, long *values, int length);
enum xrtm_solver_mask xrtm_solver_value_list_to_mask(long *values, int n_values);
int xrtm_output_n(void);
int xrtm_output_max_name_length(void);
const char *xrtm_output_index_to_name(int index);
int xrtm_output_name_to_index(const char *name);
enum xrtm_output_mask xrtm_output_index_to_mask(int index);
int xrtm_output_mask_to_index(enum xrtm_output_mask mask);
int xrtm_output_mask_to_index_list(enum xrtm_output_mask mask, int *indexes, int length);
enum xrtm_output_mask xrtm_output_name_to_mask(const char *name);
const char *xrtm_output_mask_to_name(enum xrtm_output_mask mask);
char *xrtm_output_mask_to_name_list(enum xrtm_output_mask mask, char *s, int length);
enum xrtm_output_mask xrtm_output_name_list_to_mask(char *s);
int xrtm_output_mask_to_value_list(enum xrtm_output_mask mask, long *values, int length);
enum xrtm_output_mask xrtm_output_value_list_to_mask(long *values, int n_values);
void xrtm_misc_input_init(misc_input_data *d);
int check_solvers(int solvers, int not_, int report, const char *type, const char *option, ...);
const char *xrtm_get_build_sha_1(void);
const char *xrtm_get_build_date(void);
int xrtm_check_options(int options, int report);
int xrtm_check_counts(int options, int max_coef, int n_quad, int n_stokes, int n_derivs, int n_layers, int n_theta_0s, int n_kernels, int n_kernel_quad, enum xrtm_kernel_type *kernels, int n_out_levels, int n_out_thetas, int report);
int xrtm_check_solvers(int options, int solvers, int max_coef, int n_quad, int n_stokes, int n_derivs, int n_layers, int n_theta_0s, int n_kernels, int n_kernel_quad, enum xrtm_kernel_type *kernels, int n_out_levels, int n_out_thetas, int report);
int xrtm_create(xrtm_data *d, int options, int solvers, int max_coef, int n_quad, int n_stokes, int n_derivs, int n_layers, int n_theta_0s, int n_kernels, int n_kernel_quad, enum xrtm_kernel_type *kernels, int n_out_levels, int n_out_thetas);
int xrtm_create2(xrtm_data *d, int options, int solvers, int max_coef, int n_quad, int n_stokes, int n_derivs, int n_layers, int n_theta_0s, int n_kernels, int n_kernel_quad, enum xrtm_kernel_type *kernels, int n_out_levels, int n_out_thetas, misc_input_data *misc_input);
int xrtm_destroy(xrtm_data *d);
int xrtm_get_options(xrtm_data *d);
int xrtm_get_solvers(xrtm_data *d);
int xrtm_get_max_coef(xrtm_data *d);
int xrtm_get_n_quad(xrtm_data *d);
int xrtm_get_n_stokes(xrtm_data *d);
int xrtm_get_n_derivs(xrtm_data *d);
int xrtm_get_n_layers(xrtm_data *d);
int xrtm_get_n_kernels(xrtm_data *d);
int xrtm_get_n_kernel_quad(xrtm_data *d);
int xrtm_get_kernel(xrtm_data *d, int i_kernel);
int xrtm_get_n_out_levels(xrtm_data *d);
int xrtm_get_n_out_thetas(xrtm_data *d);
int xrtm_set_doub_d_tau(xrtm_data *d, double doub_d_tau);
double xrtm_get_doub_d_tau(xrtm_data *d);
int xrtm_set_pade_params(xrtm_data *d, int pade_s, int pade_r);
int xrtm_get_pade_params(xrtm_data *d, int *pade_s, int *pade_r);
int xrtm_set_sos_params(xrtm_data *d, int sos_max_os, double sos_max_tau, double sos_tol);
int xrtm_get_sos_params(xrtm_data *d, int *sos_max_os, double *sos_max_tau, double *sos_tol);
int xrtm_set_fourier_tol(xrtm_data *d, double fourier_tol);
double xrtm_get_fourier_tol(xrtm_data *d);
int xrtm_set_lambda(xrtm_data *d, double lambda);
double xrtm_get_lambda(xrtm_data *d);
int xrtm_set_planet_r(xrtm_data *d, double planet_r);
double xrtm_get_planet_r(xrtm_data *d);
int xrtm_set_levels_z(xrtm_data *d, double *levels_z);
int xrtm_get_levels_z(xrtm_data *d, double *levels_z);
int xrtm_set_out_levels(xrtm_data *d, int *out_levels);
int xrtm_get_out_levels(xrtm_data *d, int *out_levels);
int xrtm_set_out_taus(xrtm_data *d, double *out_taus);
int xrtm_get_out_taus(xrtm_data *d, double *out_taus);
int xrtm_set_out_thetas(xrtm_data *d, double *out_thetas);
int xrtm_get_out_thetas(xrtm_data *d, double *out_thetas);
int xrtm_set_F_iso_top(xrtm_data *d, double F_iso_top);
double xrtm_get_F_iso_top(xrtm_data *d);
int xrtm_set_F_iso_top_l_1(xrtm_data *d, int i_deriv, double F_iso_top_l);
int xrtm_set_F_iso_top_l_n(xrtm_data *d, double *F_iso_top_l);
double xrtm_get_F_iso_top_l(xrtm_data *d, int i_deriv);
int xrtm_set_F_iso_bot(xrtm_data *d, double F_iso_bot);
double xrtm_get_F_iso_bot(xrtm_data *d);
int xrtm_set_F_iso_bot_l_1(xrtm_data *d, int i_deriv, double F_iso_bot_l);
int xrtm_set_F_iso_bot_l_n(xrtm_data *d, double *F_iso_bot_l);
double xrtm_get_F_iso_bot_l(xrtm_data *d, int i_deriv);
int xrtm_set_F_0(xrtm_data *d, double F_0);
double xrtm_get_F_0(xrtm_data *d);
int xrtm_set_theta_0(xrtm_data *d, double theta_0);
double xrtm_get_theta_0(xrtm_data *d);
int xrtm_set_phi_0(xrtm_data *d, double phi_0);
double xrtm_get_phi_0(xrtm_data *d);
int xrtm_set_levels_b(xrtm_data *d, double *levels_b);
int xrtm_get_levels_b(xrtm_data *d, double *levels_b);
int xrtm_set_levels_b_l_1(xrtm_data *d, int i_deriv, double *levels_b_l);
int xrtm_set_levels_b_l_n(xrtm_data *d, double **levels_b_l);
double xrtm_get_levels_b_l(xrtm_data *d, int i_deriv, double *levels_b_l);
int xrtm_set_surface_b(xrtm_data *d, double surface_b);
double xrtm_get_surface_b(xrtm_data *d);
int xrtm_set_surface_b_l_1(xrtm_data *d, int i_deriv, double surface_b_l);
int xrtm_set_surface_b_l_n(xrtm_data *d, double *surface_b_l);
double xrtm_get_surface_b_l(xrtm_data *d, int i_deriv);
int xrtm_set_g_1(xrtm_data *d, int i_layer, double g);
int xrtm_set_g_n(xrtm_data *d, double *g);
double xrtm_get_g(xrtm_data *d, int i_layer);
int xrtm_set_g_l_11(xrtm_data *d, int i_layer, int i_deriv, double g_l);
int xrtm_set_g_l_n1(xrtm_data *d, int i_deriv, double *g_l);
int xrtm_set_g_l_1n(xrtm_data *d, int i_layer, double *g_l);
int xrtm_set_g_l_nn(xrtm_data *d, double **g_l);
double xrtm_get_g_l(xrtm_data *d, int i_layer, int i_deriv);
int xrtm_set_coef_1(xrtm_data *d, int i_layer, int n_coef_layer, double **coef);
int xrtm_set_coef_n(xrtm_data *d, int *n_coef_layer, double ***coef);
int xrtm_get_n_coef(xrtm_data *d, int i_layer);
double xrtm_get_coef(xrtm_data *d, int i_layer, int i_elem, int i_coef);
int xrtm_set_coef_l_11(xrtm_data *d, int i_layer, int i_deriv, double **coef_l);
int xrtm_set_coef_l_n1(xrtm_data *d, int i_deriv, double ***coef_l);
int xrtm_set_coef_l_1n(xrtm_data *d, int i_layer, double ***coef_l);
int xrtm_set_coef_l_nn(xrtm_data *d, double ****coef_l);
double xrtm_get_coef_l(xrtm_data *d, int i_layer, int i_deriv, int i_elem, int i_coef);
int xrtm_set_omega_1(xrtm_data *d, int i_layer, double omega);
int xrtm_set_omega_n(xrtm_data *d, double *omega);
double xrtm_get_omega(xrtm_data *d, int i_layer);
int xrtm_set_omega_l_11(xrtm_data *d, int i_layer, int i_deriv, double omega_l);
int xrtm_set_omega_l_n1(xrtm_data *d, int i_deriv, double *omega_l);
int xrtm_set_omega_l_1n(xrtm_data *d, int i_layer, double *omega_l);
int xrtm_set_omega_l_nn(xrtm_data *d, double **omega_l);
double xrtm_get_omega_l(xrtm_data *d, int i_layer, int i_deriv);
int xrtm_set_ltau_1(xrtm_data *d, int i_layer, double ltau);
int xrtm_set_ltau_n(xrtm_data *d, double *ltau);
double xrtm_get_ltau(xrtm_data *d, int i_layer);
int xrtm_set_ltau_l_11(xrtm_data *d, int i_layer, int i_deriv, double ltau_l);
int xrtm_set_ltau_l_n1(xrtm_data *d, int i_deriv, double *ltau_l);
int xrtm_set_ltau_l_1n(xrtm_data *d, int i_layer, double *ltau_l);
int xrtm_set_ltau_l_nn(xrtm_data *d, double **ltau_l);
double xrtm_get_ltau_l(xrtm_data *d, int i_layer, int i_deriv);
int xrtm_set_kernel_ampfac(xrtm_data *d, int i_kernel, double ampfac);
double xrtm_get_kernel_ampfac(xrtm_data *d, int i_kernel);
int xrtm_set_kernel_params_1(xrtm_data *d, int i_kernel, int i_param, double param);
int xrtm_set_kernel_params_n(xrtm_data *d, int i_kernel, double *params);
double xrtm_get_kernel_params(xrtm_data *d, int i_kernel, int i_param);
int xrtm_set_kernel_ampfac_l_1(xrtm_data *d, int i_kernel, int i_deriv, double ampfac_l);
int xrtm_set_kernel_ampfac_l_n(xrtm_data *d, int i_kernel, double *ampfac_l);
double xrtm_get_kernel_ampfac_l(xrtm_data *d, int i_kernel, int i_deriv);
int xrtm_set_kernel_params_l_11(xrtm_data *d, int i_kernel, int i_deriv, int i_param, double param_l);
int xrtm_set_kernel_params_l_1n(xrtm_data *d, int i_kernel, int i_deriv, double *params_l);
int xrtm_set_kernel_params_l_n1(xrtm_data *d, int i_kernel, int i_param, double *params_l);
int xrtm_set_kernel_params_l_nn(xrtm_data *d, int i_kernel, double **params_l);
double xrtm_get_kernel_params_l(xrtm_data *d, int i_kernel, int i_deriv, int i_param);
int xrtm_set_kernel_func(xrtm_data *d, int i_kernel, void (*aux)(brdf_aux_data *aux, void *aux2, int i, int j, int n_derivs, uchar *derivs, double *p, double **p_l), double (*kernel)(brdf_aux_data *aux, void *aux2, enum xrtm_brdf_geometry brdf_geom, int i, int j, int k, double phi, int n_derivs, uchar *derivs, double *p, double **p_l, double *f_l));
void *xrtm_get_kernel_func(xrtm_data *d, int i_kernel);
void xrtm_clear_saved(xrtm_data *d);
int xrtm_update_varied_layers(xrtm_data *d);
int xrtm_qx(xrtm_data *d, double *qx);
int xrtm_qw(xrtm_data *d, double *qw);
int xrtm_kernel_qx(xrtm_data *d, double *kernel_qx);
int xrtm_kernel_qw(xrtm_data *d, double *kernel_qw);
int xrtm_pade_params(xrtm_data *d, int i_four, int i_layer, int *pade_s, int *pade_r);
int xrtm_local_r_t_u_w(xrtm_data *d, int i_four, int i_layer, double **r_p_, double **t_p_, double **r_m_, double **t_m_, double ***r_p_l_, double ***t_p_l_, double ***r_m_l_, double ***t_m_l_);
int xrtm_solution(xrtm_data *d, enum xrtm_solver_mask solver, int solutions, int n_out_phis, double **out_phis, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l, double *mean_p, double *mean_m, double **mean_p_l, double **mean_m_l, double *flux_p, double *flux_m, double **flux_p_l, double **flux_m_l, double *flux_div, double **flux_div_l);
int xrtm_radiance(xrtm_data *d, enum xrtm_solver_mask solver, int n_out_phis, double **out_phis, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l);
int xrtm_mean_radiance(xrtm_data *d, enum xrtm_solver_mask solver, double *mean_p, double *mean_m, double **mean_p_l, double **mean_m_l);
int xrtm_flux(xrtm_data *d, enum xrtm_solver_mask solver, double *flux_p, double *flux_m, double **flux_p_l, double **flux_m_l);
int xrtm_flux_divergence(xrtm_data *d, enum xrtm_solver_mask solver, double *flux_div, double **flux_div_l);
int xrtm_solution_2(xrtm_data *d, enum xrtm_solver_mask solver, int solutions, int n_out_phis, double **out_phis, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l, double *mean_p, double *mean_m, double **mean_p_l, double **mean_m_l, double *flux_p, double *flux_m, double **flux_p_l, double **flux_m_l, double *flux_div, double **flux_div_l);
int xrtm_radiance_2(xrtm_data *d, enum xrtm_solver_mask solver, int n_out_phis, double **out_phis, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l);
