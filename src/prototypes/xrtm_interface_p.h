/* xrtm_interface.c */
int xrtm_options_n(void);
enum xrtm_option_mask xrtm_option_mask(int index);
enum xrtm_option_mask xrtm_option_mask2(const char *name);
const char *xrtm_option_name(int index);
const char *xrtm_option_name2(enum xrtm_option_mask mask);
char *xrtm_option_list(int mask, char *s);
int xrtm_solvers_n(void);
enum xrtm_solver_mask xrtm_solver_mask(int index);
enum xrtm_solver_mask xrtm_solver_mask2(const char *name);
const char *xrtm_solver_name(int index);
const char *xrtm_solver_name2(enum xrtm_solver_mask mask);
char *xrtm_solver_list(int mask, char *s);
int check_solvers(int solvers, const char *option, ...);
const char *xrtm_get_version(void);
int xrtm_create(xrtm_data *d, int options, int solvers, int max_coef, int n_quad, int n_stokes, int n_derivs, int n_layers, int n_kernels, int n_kernel_quad, enum xrtm_kernel_type *kernels, int n_out_levels, int n_out_thetas);
int xrtm_destroy(xrtm_data *d);
int xrtm_get_options(xrtm_data *d);
int xrtm_get_solvers(xrtm_data *d);
int xrtm_get_max_coef(xrtm_data *d);
int xrtm_get_n_quad(xrtm_data *d);
int xrtm_get_n_stokes(xrtm_data *d);
int xrtm_get_n_derivs(xrtm_data *d);
int xrtm_get_n_layers(xrtm_data *d);
int xrtm_get_n_kernels(xrtm_data *d);
int xrtm_get_n_kernel_quad(xrtm_data *d);
int xrtm_get_kernel(xrtm_data *d, int i_kernel);
int xrtm_get_n_out_levels(xrtm_data *d);
int xrtm_get_n_out_thetas(xrtm_data *d);
int xrtm_set_doub_d_tau(xrtm_data *d, double d_tau);
double xrtm_get_doub_d_tau(xrtm_data *d);
int xrtm_set_pade_params(xrtm_data *d, int pade_s, int pade_r);
int xrtm_get_pade_params(xrtm_data *d, int *pade_s, int *pade_r);
int xrtm_set_sos_params(xrtm_data *d, int max_os, double max_tau, double sos_tol);
int xrtm_get_sos_params(xrtm_data *d, int *max_os, double *max_tau, double *sos_tol);
int xrtm_set_fourier_tol(xrtm_data *d, double fourier_tol);
double xrtm_get_fourier_tol(xrtm_data *d);
int xrtm_set_lambda(xrtm_data *d, double lambda);
double xrtm_get_lambda(xrtm_data *d);
int xrtm_set_F_0(xrtm_data *d, double F_0);
int xrtm_set_f_0(xrtm_data *d, double F_0);
double xrtm_get_F_0(xrtm_data *d);
double xrtm_get_f_0(xrtm_data *d);
int xrtm_set_theta_0(xrtm_data *d, double theta_0);
double xrtm_get_theta_0(xrtm_data *d);
int xrtm_set_phi_0(xrtm_data *d, double phi_0);
double xrtm_get_phi_0(xrtm_data *d);
int xrtm_set_out_levels(xrtm_data *d, int *out_levels);
int xrtm_get_out_levels(xrtm_data *d, int *out_levels);
int xrtm_set_out_taus(xrtm_data *d, double *out_taus);
int xrtm_get_out_taus(xrtm_data *d, double *out_taus);
int xrtm_set_out_thetas(xrtm_data *d, double *out_thetas);
int xrtm_get_out_thetas(xrtm_data *d, double *out_thetas);
int xrtm_set_top_b(xrtm_data *d, double top_b);
double xrtm_get_top_b(xrtm_data *d);
int xrtm_set_planet_r(xrtm_data *d, double planet_r);
double xrtm_get_planet_r(xrtm_data *d);
int xrtm_set_levels_z(xrtm_data *d, double *levels_z);
int xrtm_get_levels_z(xrtm_data *d, double *levels_z);
int xrtm_set_levels_b(xrtm_data *d, double *levels_b);
int xrtm_get_levels_b(xrtm_data *d, double *levels_b);
int xrtm_set_g_1(xrtm_data *d, int i_layer, double g);
int xrtm_set_g_n(xrtm_data *d, double *g);
double xrtm_get_g(xrtm_data *d, int i_layer);
int xrtm_set_g_l_11(xrtm_data *d, int i_layer, int i_deriv, double g_l);
int xrtm_set_g_l_n1(xrtm_data *d, int i_deriv, double *g_l);
int xrtm_set_g_l_1n(xrtm_data *d, int i_layer, double *g_l);
int xrtm_set_g_l_nn(xrtm_data *d, double **g_l);
double xrtm_get_g_l(xrtm_data *d, int i_layer, int i_deriv);
int xrtm_set_coef_1(xrtm_data *d, int i_layer, int n_coef_layer, double **coef);
int xrtm_set_coef_n(xrtm_data *d, int *n_coef_layer, double ***coef);
int xrtm_get_n_coef(xrtm_data *d, int i_layer);
double xrtm_get_coef(xrtm_data *d, int i_layer, int i_elem, int i_coef);
int xrtm_set_coef_l_11(xrtm_data *d, int i_layer, int i_deriv, double **coef_l);
int xrtm_set_coef_l_n1(xrtm_data *d, int i_deriv, double ***coef_l);
int xrtm_set_coef_l_1n(xrtm_data *d, int i_layer, double ***coef_l);
int xrtm_set_coef_l_nn(xrtm_data *d, double ****coef_l);
double xrtm_get_coef_l(xrtm_data *d, int i_layer, int i_deriv, int i_elem, int i_coef);
int xrtm_set_omega_1(xrtm_data *d, int i_layer, double omega);
int xrtm_set_omega_n(xrtm_data *d, double *omega);
double xrtm_get_omega(xrtm_data *d, int i_layer);
int xrtm_set_omega_l_11(xrtm_data *d, int i_layer, int i_deriv, double omega_l);
int xrtm_set_omega_l_n1(xrtm_data *d, int i_deriv, double *omega_l);
int xrtm_set_omega_l_1n(xrtm_data *d, int i_layer, double *omega_l);
int xrtm_set_omega_l_nn(xrtm_data *d, double **omega_l);
double xrtm_get_omega_l(xrtm_data *d, int i_layer, int i_deriv);
int xrtm_set_ltau_1(xrtm_data *d, int i_layer, double ltau);
int xrtm_set_ltau_n(xrtm_data *d, double *ltau);
double xrtm_get_ltau(xrtm_data *d, int i_layer);
int xrtm_set_ltau_l_11(xrtm_data *d, int i_layer, int i_deriv, double ltau_l);
int xrtm_set_ltau_l_n1(xrtm_data *d, int i_deriv, double *ltau_l);
int xrtm_set_ltau_l_1n(xrtm_data *d, int i_layer, double *ltau_l);
int xrtm_set_ltau_l_nn(xrtm_data *d, double **ltau_l);
double xrtm_get_ltau_l(xrtm_data *d, int i_layer, int i_deriv);
int xrtm_set_surface_b(xrtm_data *d, double surface_b);
double xrtm_get_surface_b(xrtm_data *d);
int xrtm_set_kernel_ampfac(xrtm_data *d, int i_kernel, double ampfac);
double xrtm_get_kernel_ampfac(xrtm_data *d, int i_kernel);
int xrtm_set_kernel_params_1(xrtm_data *d, int i_kernel, int i_param, double param);
int xrtm_set_kernel_params_n(xrtm_data *d, int i_kernel, double *params);
double xrtm_get_kernel_params(xrtm_data *d, int i_kernel, int i_param);
int xrtm_set_kernel_ampfac_l_1(xrtm_data *d, int i_kernel, int i_deriv, double ampfac_l);
int xrtm_set_kernel_ampfac_l_n(xrtm_data *d, int i_kernel, double *ampfac_l);
double xrtm_get_kernel_ampfac_l(xrtm_data *d, int i_kernel, int i_deriv);
int xrtm_set_kernel_params_l_11(xrtm_data *d, int i_kernel, int i_deriv, int i_param, double param_l);
int xrtm_set_kernel_params_l_1n(xrtm_data *d, int i_kernel, int i_deriv, double *params_l);
int xrtm_set_kernel_params_l_n1(xrtm_data *d, int i_kernel, int i_param, double *params_l);
int xrtm_set_kernel_params_l_nn(xrtm_data *d, int i_kernel, double **params_l);
double xrtm_get_kernel_params_l(xrtm_data *d, int i_kernel, int i_deriv, int i_param);
int xrtm_set_misc_input(xrtm_data *d, misc_input_data misc_input);
misc_input_data xrtm_get_misc_input(xrtm_data *d);
misc_input_data xrtm_get_misc_output(xrtm_data *d);
int xrtm_update_varied_layers(xrtm_data *d);
int xrtm_qx(xrtm_data *d, double *qx);
int xrtm_qw(xrtm_data *d, double *qw);
int xrtm_solution(xrtm_data *d, enum xrtm_solver_mask solver, int solutions, int n_out_phis, double **out_phis, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l, double *mean_p, double *mean_m, double **mean_p_l, double **mean_m_l, double *flux_p, double *flux_m, double **flux_p_l, double **flux_m_l, double *flux_div, double **flux_div_l);
int xrtm_radiance(xrtm_data *d, enum xrtm_solver_mask solver, int n_out_phis, double **out_phis, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l);
int xrtm_mean_radiance(xrtm_data *d, enum xrtm_solver_mask solver, double *mean_p, double *mean_m, double **mean_p_l, double **mean_m_l);
int xrtm_flux(xrtm_data *d, enum xrtm_solver_mask solver, double *flux_p, double *flux_m, double **flux_p_l, double **flux_m_l);
int xrtm_flux_divergence(xrtm_data *d, enum xrtm_solver_mask solver, double *flux_div, double **flux_div_l);
int xrtm_solution_2(xrtm_data *d, enum xrtm_solver_mask solver, int solutions, int n_out_phis, double **out_phis, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l, double *mean_p, double *mean_m, double **mean_p_l, double **mean_m_l, double *flux_p, double *flux_m, double **flux_p_l, double **flux_m_l, double *flux_div, double **flux_div_l);
int xrtm_radiance_2(xrtm_data *d, enum xrtm_solver_mask solver, int n_out_phis, double **out_phis, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l);
