/* xrtm_doubling.c */
void layer_double(double **R, double **T, double *Se_m, double *Se_p, double *Sl_m, double *Sl_p, double *L_m, double *L_p, int n, double atran, double lin_fac, int solar, int thermal, int initialize, work_data work);
void layer_double_s(double **R, double **T, double *Se_m, double *Se_p, double *Sl_m, double *Sl_p, double *L_m, double *L_p, int n, double atran, double lin_fac, int solar, int thermal, int initialize, work_data work);
void layer_double_l(double **R, double **T, double *Se_m, double *Se_p, double *Sl_m, double *Sl_p, double *L_m, double *L_p, double ***R_l, double ***T_l, double **Se_m_l, double **Se_p_l, double **Sl_m_l, double **Sl_p_l, double **L_m_l, double **L_p_l, int n, int n_derivs, double atran, double *atran_l, double lin_fac, double *lin_fac_l, int solar, int thermal, int initialize, uchar *derivs_layers, uchar *derivs_beam, uchar *derivs_thermal, work_data work);
void layer_double_s_l(double **R, double **T, double *Se_m, double *Se_p, double *Sl_m, double *Sl_p, double *L_m, double *L_p, double ***R_l, double ***T_l, double **Se_m_l, double **Se_p_l, double **Sl_m_l, double **Sl_p_l, double **L_m_l, double **L_p_l, int n, int n_derivs, double atran, double *atran_l, double lin_fac, double *lin_fac_l, int solar, int thermal, int initialize, uchar *derivs_layers, uchar *derivs_beam, uchar *derivs_thermal, work_data work);
void variant_double(double **R_m, double **T_m, double *Se_m, double *Sl_m, double *a_m, double **R_p, double **T_p, double *Se_p, double *Sl_p, double *a_p, int n_quad, int n_stokes, double atran, double lin_fac, int flag1, int flag2, int flag3, work_data work);
void variant_double_l(double **R_m, double **T_m, double *S_m, double **R_p, double **T_p, double *S_p, double ***R_m_l, double ***T_m_l, double **S_m_l, double ***R_p_l, double ***T_p_l, double **S_p_l, int n_quad, int n_stokes, int n_derivs, double atran, double *atran_l, uchar *derivs, work_data work);
