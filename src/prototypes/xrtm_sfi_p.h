/* xrtm_sfi.c */
void sfi_up(int i_four, int n_quad, int n_stokes, int n_derivs, int n_layers, int n_umus, double qf, double *qx_v, double *qw_v, double F_0, double mu_0, int n_ulevels, int *ulevels, double *utaus, double *umus, double *omega, double **omega_l, double *ltau, double **ltau_l, double *Rs_u0, double **Rs_u0_l, double **Rs_uq, double ***Rs_uq_l, double *btran, double **btran_l, double *as_0, double **as_0_l, double *atran, double **atran_l, double **P_u0_pm, double ***P_uq_pp, double ***P_uq_mp, double ***P_uq_mm, double ***P_uq_pm, double **nu, double ***X_p, double ***X_m, double **F_p, double **F_m, double ***At_p, double ***At_m, double **F0_p, double **F0_m, double **F1_p, double **F1_m, double ***P_u0_pm_l, double ****P_uq_pp_l, double ****P_uq_mp_l, double ****P_uq_mm_l, double ****P_uq_pm_l, double ***nu_l, double ****X_p_l, double ****X_m_l, double ***F_p_l, double ***F_m_l, double ****At_p_l, double ****At_m_l, double *B, double **B_l, double **I_m, double ***K_m, double **I_u, int offset, double ***I_u_l, int add_single_scattering, int greens, int surface, int solar, int thermal, int utau_output, derivs_data *derivs, work_data work, double F_iso_bot, double *F_iso_bot_l, double surface_b, double *surface_b_l, double cc[][2], double c_l[][128][2], double **P_q0_mm, double **P_q0_pm);
void sfi_dn(int i_four, int n_quad, int n_stokes, int n_derivs, int n_layers, int n_umus, double qf, double *qx_v, double *qw_v, double F_0, int n_ulevels, int *ulevels, double *utaus, double *umus, double *omega, double **omega_l, double *ltau, double **ltau_l, double *btran, double **btran_l, double *as_0, double **as_0_l, double *atran, double **atran_l, double **P_u0_mm, double ***P_uq_pp, double ***P_uq_mp, double ***P_uq_mm, double ***P_uq_pm, double **nu, double ***X_p, double ***X_m, double **F_p, double **F_m, double ***At_p, double ***At_m, double **F0_p, double **F0_m, double **F1_p, double **F1_m, double ***P_u0_mm_l, double ****P_uq_pp_l, double ****P_uq_mp_l, double ****P_uq_mm_l, double ****P_uq_pm_l, double ***nu_l, double ****X_p_l, double ****X_m_l, double ***F_p_l, double ***F_m_l, double ****At_p_l, double ****At_m_l, double *B, double **B_l, double **I_m, double ***K_m, double **I_u, int offset, double ***I_u_l, int add_single_scattering, int greens, int solar, int thermal, int utau_output, derivs_data *derivs, work_data work, double F_iso_top, double *F_iso_top_l, double c[][2], double c_l[][128][2], double **P_q0_mm, double **P_q0_pm);
void sfi_up2(int i_four, int n_quad, int n_stokes, int n_derivs, int n_layers, int n_umus, double qf, double *qx_v, double *qw_v, double F_0, double mu_0, int n_ulevels, int *ulevels, double *utaus, double *umus, double *omega, double **omega_l, double *ltau, double **ltau_l, double *Rs_u0, double **Rs_u0_l, double **Rs_uq, double ***Rs_uq_l, double *btran, double **btran_l, double *as_0, double **as_0_l, double *atran, double **atran_l, double **P_u0_pm, double ***P_uq_pp, double ***P_uq_mp, double ***P_uq_mm, double ***P_uq_pm, dcomplex **nu, dcomplex ***X_p, dcomplex ***X_m, double **F_p, double **F_m, double ***At_p, double ***At_m, double **F0_p, double **F0_m, double **F1_p, double **F1_m, double ***P_u0_pm_l, double ****P_uq_pp_l, double ****P_uq_mp_l, double ****P_uq_mm_l, double ****P_uq_pm_l, dcomplex ***nu_l, dcomplex ****X_p_l, dcomplex ****X_m_l, double ***F_p_l, double ***F_m_l, double ****At_p_l, double ****At_m_l, dcomplex *B, dcomplex **B_l, double **I_m, double ***K_m, double **I_u, int offset, double ***I_u_l, int add_single_scattering, int greens, int surface, int solar, int thermal, int utau_output, derivs_data *derivs, work_data work, double F_iso_bot, double *F_iso_bot_l, double surface_b, double *surface_b_l, double cc[][2], double c_l[][128][2], double **P_q0_mm, double **P_q0_pm);
void sfi_dn2(int i_four, int n_quad, int n_stokes, int n_derivs, int n_layers, int n_umus, double qf, double *qx_v, double *qw_v, double F_0, int n_ulevels, int *ulevels, double *utaus, double *umus, double *omega, double **omega_l, double *ltau, double **ltau_l, double *btran, double **btran_l, double *as_0, double **as_0_l, double *atran, double **atran_l, double **P_u0_mm, double ***P_uq_pp, double ***P_uq_mp, double ***P_uq_mm, double ***P_uq_pm, dcomplex **nu, dcomplex ***X_p, dcomplex ***X_m, double **F_p, double **F_m, double ***At_p, double ***At_m, double **F0_p, double **F0_m, double **F1_p, double **F1_m, double ***P_u0_mm_l, double ****P_uq_pp_l, double ****P_uq_mp_l, double ****P_uq_mm_l, double ****P_uq_pm_l, dcomplex ***nu_l, dcomplex ****X_p_l, dcomplex ****X_m_l, double ***F_p_l, double ***F_m_l, double ****At_p_l, double ****At_m_l, dcomplex *B, dcomplex **B_l, double **I_m, double ***K_m, double **I_u, int offset, double ***I_u_l, int add_single_scattering, int greens, int solar, int thermal, int utau_output, derivs_data *derivs, work_data work, double F_iso_top, double *F_iso_top_l, double c[][2], double c_l[][128][2], double **P_q0_mm, double **P_q0_pm);
