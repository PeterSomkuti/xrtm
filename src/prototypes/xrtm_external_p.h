/* xrtm_external.c */
int call_disort(int n_coef, int n_quad, int n_layers, double *qx, double lambda, double F_0, double mu_0, double phi_0, int *ulevels, double *utaus, int n_ulevels, double *umus, int n_umus, double *phis, int n_phis, double F_iso_top, double *levels_b, double surface_b, double albedo_, int *n_coef_layer, double ***coefs, double *omega, double *ltau, double ****I_p, double ****I_m, double *mean_p, double *mean_m, double *flux_p, double *flux_m, double fourier_tol, int delta_m, int n_t_tms, int radiance, int mean, int flux, int solar, int thermal, int utau_output);
int call_lidort(int n_four, int n_elem, int n_coef, int n_quad, int n_derivs, int n_layers, double *qx, double F_0, double mu_0, double phi_0, int *ulevels, double *utaus, int n_ulevels, double *umus, int n_umus, double *phis, int n_phis, double planet_r, double *levels_z, int n_kernels, int n_kernel_quad, enum xrtm_kernel_type *kernels, double *ampfac, double **ampfac_l, double **params, double ***params_l, int *n_coef_layer, double ***coefs, double ****coefs_l, double *omega, double **omega_l, double *ltau, double **ltau_l, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l, double *mean_p, double *mean_m, double **mean_p_l, double **mean_m_l, double *flux_p, double *flux_m, double **flux_p_l, double **flux_m_l, double fourier_tol, int delta_m, int n_t_tms, int psa, int quad_output, int radiance, int mean, int flux, int utau_output, uchar **derivs);
int call_lrad(int n_four, int n_elem, int n_coef, int n_quad, int n_stokes, int n_derivs, int n_layers, double *qx, double lambda, double F_0, double mu_0, double phi_0, int n_ulevels, double *umus, int n_umus, double *phis, int n_phis, double planet_r, double *levels_z, double *levels_t, double surface_t, int n_kernels, int n_kernel_quad, enum xrtm_kernel_type *kernels, double *ampfac, double **ampfac_l, double **params, double ***params_l, int *n_coef_layer, double ***coefs0, double ****coefs0_l, double ***coefs, double ****coefs_l, double *omega0, double **omega0_l, double *omega, double **omega_l, double *ltau, double **ltau_l, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l, double fourier_tol, int delta_m, int n_t_tms, int psa, uchar **derivs);
int call_polrad(int n_four, int n_coef, int n_quad, int n_stokes, int n_layers, double *qx, double F_0, double mu_0, double phi_0, int n_ulevels, double *umus, int n_umus, double *phis, int n_phis, double albedo, int *n_coef_layer, double ***coefs, double *omega, double *ltau, double ****I_p, double ****I_m, double fourier_tol, int delta_m);
int call_radiant(int n_four, int n_elem, int n_coef, int n_quad, int n_derivs, int n_layers, double *qx, double lambda, double F_0, double mu_0, double phi_0, double *utaus, int n_ulevels, double *umus, int n_umus, double *phis, int n_phis, double top_b, double planet_r, double *levels_z, double *levels_b, double surface_b, int n_kernels, int n_kernel_quad, enum xrtm_kernel_type *kernels, double *ampfac, double **ampfac_l, double **params, double ***params_l, int *n_coef_layer, double ***coefs, double ****coefs_l, double *omega, double **omega_l, double *ltau, double **ltau_l, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l, double *flux_p, double *flux_m, double fourier_tol, int quad_type_, int delta_m, int n_t_tms, int psa, int radiance, int flux, int thermal, int utau_output, uchar **derivs);
int call_radtran3(int n_four, int n_elem, int n_coef, int n_quad, int n_stokes, int n_layers, double *qx, double lambda, double F_0, double mu_0, double phi_0, int *ulevels, int n_ulevels, double *umus, int n_umus, double *phis, int n_phis, double top_b, double *levels_b, double surface_b, double albedo, int *n_coef_layer, double ***coefs, double *omega, double *ltau, double ****I_p, double ****I_m, double *flux_p, double *flux_m, double d_tau, int quad_type_, int delta_m, int radiance, int flux, int solar, int thermal);
int call_soi(int n_four, int n_elem, int n_coef, int n_quad, int n_layers, double *qx, double F_0, double mu_0, double phi_0, double *umus, int n_umus, double *phis, int n_phis, double planet_r, double *levels_z, int n_kernels, int n_kernel_quad, enum xrtm_kernel_type *kernels, double *ampfac, double **params, int *n_coef_layer, double ***coefs, double *omega, double *ltau, double ****I_p, double ****I_m, double d_tau, double fourier_tol, int delta_m, int n_t_tms, int psa);
int call_twostr(int n_layers, double lambda, double F_0, double mu_0, double phi_0, int *ulevels, double *utaus, int n_ulevels, double top_t, double planet_r, double *levels_z, double *levels_t, double surface_t, double albedo_, double *g, double *omega, double *ltau, double *mean_p, double *mean_m, double *flux_p, double *flux_m, double *flux_div, int delta_m, int mean, int flux, int div, int psa, int thermal, int utau_output);
int call_vlidort(int n_four, int n_elem, int n_coef, int n_quad, int n_stokes, int n_derivs, int n_layers, double *qx, double lambda, double F_0, double mu_0, double phi_0, int *ulevels, double *utaus, int n_ulevels, double *umus, int n_umus, double *phis, int n_phis, double top_b, double planet_r, double *levels_z, double *levels_b, double surface_b, int n_kernels, int n_kernel_quad, enum xrtm_kernel_type *kernels, double *ampfac, double **ampfac_l, double **params, double ***params_l, int *n_coef_layer, double ***coefs, double ****coefs_l, double *omega, double **omega_l, double *ltau, double **ltau_l, double ****I_p, double ****I_m, double *****I_p_l, double *****I_m_l, double *mean_p, double *mean_m, double **mean_p_l, double **mean_m_l, double *flux_p, double *flux_m, double **flux_p_l, double **flux_m_l, double fourier_tol, int delta_m, int n_t_tms, int psa, int quad_output, int radiance, int mean, int flux, int thermal, int utau_output, uchar **derivs);
